@page "/login"
@using ADCourseWork.Models
@using ADCourseWork.Services
@inject IUserService userService
@inject NavigationManager navigationManager
@inject AuthentucationStateService authStateService



<h3>Login</h3>

<div>
    <form>
        <div class="mb-3">
            <label for="username" class="form-label">Username:</label>
            <input type="text"
                   id="username"
                   class="form-control"
                   @bind="username"
                   placeholder="Enter your username"
                   required />
        </div>
        <div class="mb-3">
            <label for="password" class="form-label">Password:</label>
            <input type="password"
                   id="password"
                   class="form-control"
                   @bind="password"
                   placeholder="Enter your password"
                   required />
        </div>
        <button type="button" class="btn btn-primary w-100" @onclick="LoginUser">Login</button>
    </form>
    <p>
        Don't have an account?
        <a href="/add-user">Sign Up</a>
    </p>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="error-message">@errorMessage</p>
}

@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task LoginUser()
    {
        try
        {
            var users = await userService.LoadUsersAsync();
            var user = users.FirstOrDefault(u => u.UserName == username && u.Password == HashPassword(password));

            if (user != null)
            {
                // Set the authenticated user in state management
                authStateService.SetAuthenticatedUser(user);

                // Redirect to the dashboard or todo page
                navigationManager.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred during login: {ex.Message}";
        }
    }

    private string HashPassword(string password)
    {
        using (var sha256 = System.Security.Cryptography.SHA256.Create())
        {
            var bytes = System.Text.Encoding.UTF8.GetBytes(password);
            var hash = sha256.ComputeHash(bytes);
            return Convert.ToBase64String(hash);
        }
    }
}

